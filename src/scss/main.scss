/*
       d8888  .d88888b.  888
      d88888 d88P" "Y88b 888
     d88P888 888     888 888
    d88P 888 888     888 888
   d88P  888 888     888 888
  d88P   888 888     888 888
 d8888888888 Y88b. .d88P 888
d88P     888  "Y88888P"  88888888
*/

@charset "utf-8";

// Compass Plugins
// ===============
@import "compass/css3";
@import "compass/utilities";
@import "compass/reset";

// Third-Party Plugins
// Ex: @import "animation";

// If you don't need to change any of the variables that affect Bootstrap
// itself, using the compiled version will make Compass builds considerably
// faster.
@import "../../components/sass-bootstrap/bootstrap-2.3.2.css";

// If you do want to affect Bootstrap variables (because that's an awesome
// option to have), use the .scss version.
// @import "../../components/sass-bootstrap/lib/bootstrap";

@import "lib/font-awesome";

// Sass Features
// =============
@import "variables";
@import "functions/all";
@import "mixins/all";

// Styles
// ======
// Styles are defined as part of four groups according to the principles of
// Scalable and Modular CSS (SMACSS): Base, Layout, Module, State
//
// http://smacss.com/

// Base styles
// ===========
// A Base rule is applied to an element using an element selector, a descendent
// selector, or a child selector, along with any pseudo-classes. It doesnâ€™t
// include any class or ID selectors. It is defining the default styling for
// how that element should look in all occurrences on the page.
@import "rules/base";

// - Layout = major components, e.g., header, footer etc.
// - Modules = minor components, e.g., navigation bar, callout, widgets etc.
// - State  = a state is something that augments + overrides all other styles,
//            e.g., success or error state
//
@import "rules/layout";
@import "rules/modules/all";
@import "rules/state";
